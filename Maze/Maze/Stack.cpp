#include "Stack.h"


//============================================COUNSTACTOR AND DESTRACTOR===============================================//
STACK::STACK() { top = nullptr; }
//---------------------------------------------------------------------------------------------------//
STACK:: ~STACK() { MakeEmpty(); }
//---------------------------------------------------------------------------------------------------//

//============================================PUBLIC METHODS===============================================//

void STACK::MakeEmpty()
{
	Node* temp;
	while (top != nullptr)
	{
		temp = top;
		top = top->getNext();
		delete temp;
	}
}
//---------------------------------------------------------------------------------------------------//
int STACK::IsEmpty() { return(top == nullptr); }
//---------------------------------------------------------------------------------------------------//
void STACK::Push(Point item) { top = new Node(item, top); }
//---------------------------------------------------------------------------------------------------//
Point STACK::Pop()
{
	if (IsEmpty())
	{
		cout << "Error: STACK UNDERFLOW\n";
		exit(-1);
	}
	Node* temp = top;
	Point item = top->getData();
	top = top->getNext();
	delete temp;

	return(item);
}
//---------------------------------------------------------------------------------------------------//
Point STACK::Top() { return (top->getData()); };
